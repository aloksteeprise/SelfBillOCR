.form-section {
  border-right: 2px solid #ddd;
  padding-right: 20px;
}

/* ::ng-deep .mat-typography h5 {
 
  margin: 0 !important;
} */

.headingmargin{
  margin: 0px 17px 0px !important;
}

::ng-deep .modal-header  {
padding: 0px !important ;
}

::ng-deep .modal-header .btn-close {
padding: 19px;
}


::ng-deep .btn-close {

  --bs-btn-close-focus-shadow :none !important;
}


::ng-deep .modal-content{
  background-color: rgba(250,249,253,255) !important;
}




.fontchange {
  font-size: 12px;
  font-weight: 600;
}

.custom-modal-width {
  max-width: 66%;
}

.custom-fontsize {
  font-size: 13px;
  color: red;
}

.fontsize14{
  font-size: 14px;
  color: #2F455C;
  font-weight: bold;
}

.pdf-container {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 500px;
  border: 1px solid #ddd;
  border-radius: 8px;
  overflow: hidden;
  margin-top: 20px;
}

/* Adjust the container to maintain proper dimensions */

::ng-deep .custom-modal-width[_ngcontent-ng-c760026350] {
  max-width: 66% !important;
}

/* ::ng-deep .ngxImageZoomContainer {
  width: 792px !important; 
  height: 470px !important;
  display: block;
} */

/* Customize the lens appearance */
::ng-deep .ngxImageZoomFullContainer.ngxImageZoomLensEnabled {
  border: 2px solid #7393B3 !important; /* Lens border */
  cursor: crosshair !important; /* Pointer */
}




/* PDF Viewer */
.pdf-viewer {
  width: 100%;
  height: 100%;
  border: none;
}

/* Magnifier Glass */
.magnifier {
  position: absolute;
  border: 3px solid #ccc;
  border-radius: 50%;
  cursor: zoom-in;
  width: 150px;
  height: 150px;
  overflow: hidden;
  display: none;
  pointer-events: none;
  z-index: 10;
}

lib-ngx-image-zoom {
  max-width: 100%;
  max-height: 100%;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

.error-message {
  min-height: 10px;
  margin-top: 8px; 
}

.text-danger {
  font-size: 0.75rem; 
  line-height: 1; 
}

.form-control {
  transition: border-color 0.3s ease; 
}

.form-control.is-invalid {
  border-color: #dc3545;
}



.error-message {
  margin-top: 0.15rem;
  font-size: 0.875rem;
}

@media (max-width: 767px) {
  .col-sm-3 {
    flex: 0 0 100%; 
  }

  .col-sm-9 {
    flex: 0 0 100%; 
  }
}

@media screen and (min-width: 300px) and (max-width: 700px) {
  .custom-height {

    margin-top: 40px !important;
  }

  ::ng-deep .custom-modal-width[_ngcontent-ng-c760026350] {
    max-width: 100% !important;
  }

  .phoneresponsive{
    display: flex !important;
    justify-content: center !important;
    margin-bottom: 10px !important;
  }

  .buttonmargin_mobile{
    margin-right: 15px;
  }

  ::ng-deep .ngxImageZoomContainer {
  
  height: 580px !important;

}
}

@media (max-width: 768px) {
  .custom-modal-width {
    max-width: 100%;
  }
}

.image-scroll-container {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: auto;
  position: relative;
}

/* / Ensure scroll container behaves dynamically / */
.image-scroll-container {
  overflow-x: auto; /* Scroll horizontally if needed */
  overflow-y: auto !important; /* Scroll vertically if needed */
  white-space: nowrap; /* Prevent wrapping */
  max-width: 100%; /* Limit container width */
  max-height: 100%; /* Limit container height */
}

::ng-deep .ngxImageZoomFullContainer.ngxImageZoomLensEnabled {
  border: 2px solid #7393B3 !important; 
  cursor: crosshair !important; 
}

/*loding image*/

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  
}


.loader {
  width: 50px;
  aspect-ratio: 1;
  display: grid;
  border: 4px solid #0000;
  border-radius: 50%;
  border-color: #ccc #0000;
  animation: l16 1s infinite linear;
}

.loader::before,
.loader::after {
    content: "";
    grid-area: 1/1;
    margin: 2px;
    border: inherit;
    border-radius: 50%;
}

.loader::before {
    border-color: #f03355 #0000;
    animation: inherit;
    animation-duration: 0.5s;
    animation-direction: reverse;
}

.loader::after {
    margin: 8px;
}

@keyframes l16 {
  100% {
      transform: rotate(1turn);
  }
}
/*end*/